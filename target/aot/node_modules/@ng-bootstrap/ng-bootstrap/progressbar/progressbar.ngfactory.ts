/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */


import * as import0 from '@angular/core';
import * as import1 from '@angular/common';
import * as import2 from '@ng-bootstrap/ng-bootstrap/progressbar/progressbar';
import * as import3 from '@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config';
const styles_NgbProgressbar:any[] = ([] as any[]);
export const RenderType_NgbProgressbar:import0.RendererType2 = import0.ɵcrt({
  encapsulation: 2,
  styles: styles_NgbProgressbar,
  data: {}
}
);
function View_NgbProgressbar_1(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'span',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),[
      '',
      '%'
    ]
    ))
  ]
  ,(null as any),(ck,v) => {
    var co:any = v.component;
    const currVal_0:any = co.getPercentValue();
    ck(v,1,0,currVal_0);
  });
}
export function View_NgbProgressbar_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(2,[
    (l()(),import0.ɵted((null as any),['\n    '])),
      (l()(),import0.ɵeld(0,(null as any),(null as any),8,'div',[[
        'class',
        'progress'
      ]
    ],(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),['\n      '])),
    (l()(),import0.ɵeld(0,(null as any),(null as any),5,'div',[
      [
        'aria-valuemin',
        '0'
      ]
      ,
      [
        'role',
        'progressbar'
      ]

    ]
    ,[
      [
        8,
        'className',
        0
      ]
      ,
      [
        4,
        'width',
        '%'
      ]
      ,
      [
        1,
        'aria-valuenow',
        0
      ]
      ,
      [
        1,
        'aria-valuemax',
        0
      ]

    ]
    ,(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),['\n        '])),
    (l()(),import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_NgbProgressbar_1)),
    import0.ɵdid(8192,(null as any),0,import1.NgIf,[
      import0.ViewContainerRef,
      import0.TemplateRef
    ]
      ,{ngIf: [
        0,
        'ngIf'
      ]
    },(null as any)),
    import0.ɵncd((null as any),0),
    (l()(),import0.ɵted((null as any),['\n      '])),
    (l()(),import0.ɵted((null as any),['\n    '])),
    (l()(),import0.ɵted((null as any),['\n  ']))
  ]
  ,(ck,v) => {
    var co:import2.NgbProgressbar = v.component;
    const currVal_4:any = co.showValue;
    ck(v,6,0,currVal_4);
  },(ck,v) => {
    var co:import2.NgbProgressbar = v.component;
    const currVal_0:any = import0.ɵinlineInterpolate(3,'progress-bar',(co.type? (' bg-' + co.type): ''),'',(co.animated? ' progress-bar-animated': ''),'',(co.striped? ' progress-bar-striped': ''),'');
    const currVal_1:any = co.getPercentValue();
    const currVal_2:any = co.getValue();
    const currVal_3:any = co.max;
    ck(v,3,0,currVal_0,currVal_1,currVal_2,currVal_3);
  });
}
function View_NgbProgressbar_Host_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'ngb-progressbar',([] as any[]),(null as any),(null as any),(null as any),View_NgbProgressbar_0,RenderType_NgbProgressbar)),
    import0.ɵdid(24576,(null as any),0,import2.NgbProgressbar,[import3.NgbProgressbarConfig],(null as any),(null as any))
  ]
  ,(null as any),(null as any));
}
export const NgbProgressbarNgFactory:import0.ComponentFactory<import2.NgbProgressbar> = import0.ɵccf('ngb-progressbar',import2.NgbProgressbar,View_NgbProgressbar_Host_0,{
  max: 'max',
  animated: 'animated',
  striped: 'striped',
  showValue: 'showValue',
  type: 'type',
  value: 'value'
}
,{},['*']);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvY3lyaWwvUHJvamVjdHMvQmxvZy9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3NiYXIubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vaG9tZS9jeXJpbC9Qcm9qZWN0cy9CbG9nL25vZGVfbW9kdWxlcy9AbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcC9wcm9ncmVzc2Jhci9wcm9ncmVzc2Jhci5kLnRzIiwibmc6Ly8vaG9tZS9jeXJpbC9Qcm9qZWN0cy9CbG9nL25vZGVfbW9kdWxlcy9AbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcC9wcm9ncmVzc2Jhci9wcm9ncmVzc2Jhci5kLnRzLk5nYlByb2dyZXNzYmFyLmh0bWwiLCJuZzovLy9ob21lL2N5cmlsL1Byb2plY3RzL0Jsb2cvbm9kZV9tb2R1bGVzL0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwL3Byb2dyZXNzYmFyL3Byb2dyZXNzYmFyLmQudHMuTmdiUHJvZ3Jlc3NiYXJfSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCJcbiAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3NcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1iYXJ7e3R5cGUgPyAnIGJnLScgKyB0eXBlIDogJyd9fXt7YW5pbWF0ZWQgPyAnIHByb2dyZXNzLWJhci1hbmltYXRlZCcgOiAnJ319e3tzdHJpcGVkID9cbiAgICAnIHByb2dyZXNzLWJhci1zdHJpcGVkJyA6ICcnfX1cIiByb2xlPVwicHJvZ3Jlc3NiYXJcIiBbc3R5bGUud2lkdGguJV09XCJnZXRQZXJjZW50VmFsdWUoKVwiXG4gICAgW2F0dHIuYXJpYS12YWx1ZW5vd109XCJnZXRWYWx1ZSgpXCIgYXJpYS12YWx1ZW1pbj1cIjBcIiBbYXR0ci5hcmlhLXZhbHVlbWF4XT1cIm1heFwiPlxuICAgICAgICA8c3BhbiAqbmdJZj1cInNob3dWYWx1ZVwiPnt7Z2V0UGVyY2VudFZhbHVlKCl9fSU8L3NwYW4+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICIsIjxuZ2ItcHJvZ3Jlc3NiYXI+PC9uZ2ItcHJvZ3Jlc3NiYXI+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDS1E7SUFBd0I7TUFBQTtNQUFBO0lBQUE7SUFBQTs7OztJQUFBO0lBQUE7Ozs7O0lBTGhDO01BQ0k7UUFBQTtRQUFBO01BQUE7SUFBQTtJQUFzQjtJQUNwQjtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7SUFFNkU7SUFDM0U7Z0JBQUE7OztJQUFBO09BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtnQkFBcUQ7SUFBeUI7SUFDMUU7SUFDRjs7OztJQUZJO0lBQU4sU0FBTSxTQUFOOzs7SUFIRztJQUM0QztJQUNuRDtJQUFvRDtJQUZsRCxTQUFLLFVBQzRDLFVBQ25ELFVBQW9ELFNBRmxEOzs7OztJQ0ZOO2dCQUFBOzs7Ozs7Ozs7Ozs7In0=
